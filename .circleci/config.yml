version: 2.1
executors:
  toxandnode:
    working_directory: ~/project
    docker:
      - image: girder/tox-and-node
      - image: memcached
      - image: mongo:4.4
        command: bash -c "mkdir /dev/shm/mongo && mongod --nojournal --dbpath=/dev/shm/mongo --noauth --bind_ip_all"
      - image: rabbitmq
commands:
  use_nvm:
      description: "Use nvm"
      parameters:
        node:
          type: string
          default: v20
      steps:
        - run:
            name: Use nvm
            # see https://discuss.circleci.com/t/nvm-does-not-change-node-version-on-machine/28973/14
            command: |
              echo 'export NVM_DIR="/root/.nvm"' >> $BASH_ENV
              echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
        - restore_cache:
            name: Restore nvm cache
            key: v1-nvm-cache-<< parameters.node >>
        - run:
            name: Switch node versions
            command: |
              nvm install << parameters.node >>
              nvm alias default << parameters.node >>
              NODE_DIR=$(dirname $(which node))
              echo "export PATH=$NODE_DIR:\$PATH" >> $BASH_ENV
        - run:
            name: Check node versions
            command: |
              node --version
              npm --version
  build_client:
    description: "Build HistomicsUI client"
    steps:
      - run:
          name: Build client
          command: |
            pushd histomicsui/web_client
            npm ci
            npm run build
            popd
  install_playwright:
    description: "Install playwright"
    steps:
      - run:
          name: Install playwright with dependencies
          command: |
            pushd histomicsui/web_client
            npx playwright install --with-deps
            popd
  tox:
    description: "Run tox"
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Run tests via tox
          # Piping through cat does less buffering of the output but can
          # consume the exit code
          command: PYTEST_NUMPROCESSES=2 tox -e << parameters.env >> | cat; test ${PIPESTATUS[0]} -eq 0
  coverage:
    description: "Upload coverage"
    steps:
      - run:
          name: Install Codecov client
          command: |
              curl -Os https://uploader.codecov.io/latest/linux/codecov
              chmod +x codecov
      - run:
          name: Upload coverage
          # Retry as codecov can be flaky
          command: for i in $(seq 1 10); do [ $i -gt 1 ] && echo "retrying $i" && sleep 5; ./codecov --disable search pycov gcov --file .tox/coverage/py_coverage.xml,.tox/coverage/cobertura-coverage.xml && s=0 && break || s=$?; done; (exit $s)

jobs:
  py38:
    executor: toxandnode
    steps:
      - checkout
      - use_nvm
      - build_client
      - tox:
          env: py38
      - coverage
  py39:
    executor: toxandnode
    steps:
      - checkout
      - use_nvm
      - build_client
      - tox:
          env: py39
      - coverage
  py310:
    executor: toxandnode
    steps:
      - checkout
      - use_nvm
      - build_client
      - tox:
          env: py310
      - coverage
  py311:
    executor: toxandnode
    steps:
      - checkout
      - use_nvm
      - build_client
      - tox:
          env: py311
      - coverage
  py312:
    executor: toxandnode
    steps:
      - checkout
      - use_nvm
      - build_client
      - tox:
          env: py312
      - coverage
  py313:
    executor: toxandnode
    steps:
      - checkout
      - use_nvm
      - build_client
      - tox:
          env: py313
      - coverage
  web_client:
    executor: toxandnode
    environment:
      CI: "true"
      HEADLESS: "true"
      GIRDER_CLIENT_TESTING_MONGO_URI: mongodb://localhost:27017
    steps:
      - checkout
      - use_nvm
      - build_client
      - install_playwright
      - tox:
          env: webtest
  noanalysis:
    executor: toxandnode
    steps:
      - checkout
      - use_nvm
      - build_client
      - tox:
          env: noanalysis
      - coverage
  lint_and_docs:
    executor: toxandnode
    steps:
      - checkout
      - tox:
          env: lint,lintclient
  release:
    docker:
      - image: girder/tox-and-node
    steps:
      - checkout
      - use_nvm
      - build_client
      - deploy:
          name: Run tests via tox
          # Piping through cat does less buffering of the output but can
          # consume the exit code
          command: tox -e release | cat; test ${PIPESTATUS[0]} -eq 0

workflows:
  version: 2
  ci:
    jobs:
      - py38:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py39:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py310:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py311:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py312:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py313:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - noanalysis:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - lint_and_docs:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - web_client:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - release:
          requires:
            - py38
            - py39
            - py310
            - py311
            - py312
            - py313
            - lint_and_docs
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
                - girder-5
