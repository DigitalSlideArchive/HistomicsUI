version: 2.1
executors:
  toxandnode:
    working_directory: ~/project
    docker:
      - image: girder/tox-and-node
      - image: memcached
      - image: mongo:4.4
        command: bash -c "mkdir /dev/shm/mongo && mongod --nojournal --dbpath=/dev/shm/mongo --noauth --bind_ip_all"
      - image: rabbitmq
commands:
  tox:
    description: "Run tox"
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Preinstall phantomjs to work around an npm permission issue
          command: npm install -g phantomjs-prebuilt --unsafe-perm
      - run:
          name: Run tests via tox
          # Piping through cat does less buffering of the output but can
          # consume the exit code
          command: PYTEST_NUMPROCESSES=2 tox -e << parameters.env >> | cat; test ${PIPESTATUS[0]} -eq 0
  coverage:
    description: "Upload coverage"
    steps:
      - run:
          name: Install Codecov client
          command: pip install codecov==2.1.9
      - run:
          name: Upload coverage
          # Retry as codecov can be flaky
          command: for i in $(seq 1 10); do [ $i -gt 1 ] && echo "retrying $i" && sleep 5; codecov --required --disable search pycov gcov --root project --file .tox/coverage/py_coverage.xml .tox/coverage/cobertura-coverage.xml && s=0 && break || s=$?; done; (exit $s)

jobs:
  py36:
    executor: toxandnode
    steps:
      - checkout
      - tox:
          env: py36
      - coverage
  py37:
    executor: toxandnode
    steps:
      - checkout
      - tox:
          env: py37
      - coverage
  py38:
    executor: toxandnode
    steps:
      - checkout
      - tox:
          env: py38
      - coverage
  py39:
    executor: toxandnode
    steps:
      - checkout
      - tox:
          env: py39
      - coverage
  py310:
    executor: toxandnode
    steps:
      - checkout
      - tox:
          env: py310
      - coverage
  noanalysis:
    executor: toxandnode
    steps:
      - checkout
      - tox:
          env: noanalysis
      - coverage
  lint_and_docs:
    executor: toxandnode
    steps:
      - checkout
      - tox:
          env: flake8,lintclient
  release:
    docker:
      - image: girder/tox-and-node
    steps:
      - checkout
      - deploy:
          name: Run tests via tox
          # Piping through cat does less buffering of the output but can
          # consume the exit code
          command: tox -e release | cat; test ${PIPESTATUS[0]} -eq 0

workflows:
  version: 2
  ci:
    jobs:
      - py36:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py37:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py38:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py39:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - py310:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - noanalysis:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - lint_and_docs:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore:
                - gh-pages
      - release:
          requires:
            - py36
            - py37
            - py38
            - py39
            - py310
            - lint_and_docs
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
