mixin analysisMenu(image, imageName, pos, maxRows)
  li.dropdown-submenu
    a(tabindex='0', href='#', data-name=imageName) #{imageName}
    -
      let finalv = pos + Object.keys(image).length
      let posv = pos - (finalv > maxRows ? finalv - maxRows : 0)
    ul.dropdown-menu(row_offset=finalv > maxRows ? finalv - maxRows : 0)
      each version, versionName in image
        li.dropdown-submenu
          a(tabindex='0', href='#') #{versionName}
          - let finalc = posv + Object.keys(version).length
          ul.dropdown-menu(row_offset=finalc > maxRows ? finalc - maxRows : 0)
            each cli, cliName in version
              - var api = cli.run.replace(/\/run$/, '');
              li
                a.h-analysis-item(
                    tabindex='0',
                    href='#',
                    data-api=api,
                    data-image=imageName,
                    data-version=versionName,
                    data-cli=cliName) #{cliName}
        - posv += 1

a.h-analyses-dropdown-link(data-toggle='dropdown')
  | #[span.icon-tasks] Analyses #[span.icon-down-open]
-
  let depth = 0;
  let rows = maxRows;
  let keyList = Object.keys(analyses).sort();
  let entries = keyList.length;
  if (entries > maxRows * maxRows * maxRows) {
    rows = Math.ceil(Math.pow(entries, 1./3));
  }
  if (entries > maxRows * maxRows) {
    depth = 2;
  } else if (entries > maxRows) {
    depth = 1;
  }
ul.h-analyses-dropdown.dropdown-menu(role='menu')
  if depth === 2
    - let pos2 = 0
    for d2v, d2i in Array(Math.ceil(entries / rows / rows))
      -
        let start2 = d2i * rows * rows;
        let end2 = Math.min((d2i + 1) * rows * rows, entries);
      li.dropdown-submenu
        a(tabindex='0', href='#', title=keyList[start2] + ' to ' + keyList[end2 - 1]) #{start2 + 1} to #{end2}
        -
          let final1 = pos1 + (end2 - start2)
          let pos1 = pos2 - (final1 > maxRows ? final1 - maxRows : 0)
        ul.dropdown-menu(row_offset=final1 > maxRows ? final1 - maxRows : 0)
          for d1v, d1i in Array(Math.ceil((end2 - start2) / rows))
            -
              let start1 = start2 + d1i * rows;
              let end1 = Math.min(start2 + (d1i + 1) * rows, entries);
            li.dropdown-submenu
              a(tabindex='0', href='#', title=keyList[start1] + ' to ' + keyList[end1 - 1]) #{start1 + 1} to #{end1}
              -
                let final0 = pos1 + (end1 - start1)
                let pos0 = pos1 - (final0 > maxRows ? final0 - maxRows : 0)
              ul.dropdown-menu(row_offset=final0 > maxRows ? final0 - maxRows : 0)
                for d0v, d0i in Array(end1 - start1)
                  -
                    let imageName = keyList[start1 + d0i];
                    let image = analyses[imageName];
                  +analysisMenu(image, imageName, pos0, maxRows)
                  - pos0 += 1
            - pos1 += 1
        - pos2 += 1
  else if depth === 1
    - let pos1 = 0
    for d1v, d1i in Array(Math.ceil(entries / rows))
      -
        let start1 = d1i * rows;
        let end1 = Math.min((d1i + 1) * rows, entries);
      li.dropdown-submenu
        a(tabindex='0', href='#', title=keyList[start1] + ' to ' + keyList[end1 - 1]) #{start1 + 1} to #{end1}
        -
          let final0 = pos1 + (end1 - start1)
          let pos0 = pos1 - (final0 > maxRows ? final0 - maxRows : 0)
        ul.dropdown-menu(row_offset=final0 > maxRows ? final0 - maxRows : 0)
          for d0v, d0i in Array(end1 - start1)
            -
              let imageName = keyList[start1 + d0i];
              let image = analyses[imageName];
            +analysisMenu(image, imageName, pos0, maxRows)
            - pos0 += 1
      - pos1 += 1
  else
    - let pos0 = 0
    each imageName in keyList
      - let image = analyses[imageName];
      +analysisMenu(image, imageName, pos0, maxRows)
      - pos0 += 1
